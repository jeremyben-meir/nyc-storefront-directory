{"version":3,"sources":["components/Map.js","views/Home.js","views/NoMatch.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["mapboxgl","accessToken","process","Map","mapContainer","useRef","useState","hover","setHover","map_focus","map_focus_dict","map_string_dict","useEffect","map","container","current","style","zoom","center","place_data","BBLPlaces","console","log","default","on","addSource","type","data","addLayer","popup","Popup","offset","closeButton","closeOnClick","e","getCanvas","cursor","features","geometry","coordinates","slice","bbl","properties","BBL","vacancy","turnover","maxbus","remove","legend_div_span_style","borderRadius","display","height","marginRight","width","bbl_htm","name","address","start","ref","id","class","backgroundColor","bottom","boxShadow","font","padding","position","right","zIndex","margin","Object","entries","item","index","left","Home","zipLocation","styled","div","Navbar","props","state","show","scrollPos","handleScroll","bind","window","addEventListener","this","removeEventListener","setState","document","body","getBoundingClientRect","top","brand","links","Transition","StyledNavbarTop","className","href","alt","StyledNavbar","React","Component","navlinks","to","App","Fragment","path","exact","component","NoMatch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+l+yFAMAA,IAASC,YAAcC,oGAEhB,I,EAAMC,EAAM,WAEf,IAAMC,EAAeC,mBACrB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EADuC,UAGvCC,EAAiB,CACnB,EAAM,UACN,EAAM,UACN,EAAM,UACN,EAAM,UACN,EAAM,UACN,EAAM,UACN,EAAM,UACN,EAAM,UACN,EAAM,UACN,EAAM,UACN,GAAO,WA6DPC,EAAkB,GAOlBA,EAzBwB,CACxB,EAAM,OACN,EAAM,QACN,EAAM,QACN,EAAM,QACN,EAAM,QACN,EAAM,QACN,EAAM,QACN,EAAM,QACN,EAAM,QACN,EAAM,QAoBVC,qBAAU,WACN,IAAMC,EAAM,IAAIb,IAASG,IAAI,CACzBW,UAAWV,EAAaW,QACxBC,MAAO,mCACPC,KAAM,KACNC,OAAQ,EAAE,UAAU,YAIpBC,EAAa,GAIbA,EAAaC,EAEjBC,QAAQC,IAAIH,EAAWI,SACvBV,EAAIW,GAAG,QAAQ,WAEXX,EAAIY,UAAU,SAAU,CACpBC,KAAM,UACNC,KAAMR,EAAWI,UAGrBV,EAAIe,SAAS,CACT,GAAM,SACN,KAAQ,SACR,OAAU,SAEV,MAAS,CAEL,gBAAiB,CACb,KAAQ,KACR,MAAS,CACL,CAAC,GAAI,GACL,CAAC,GAAI,MAIb,eAAgB,CACZ,QACA,CAAC,MAAOnB,GACR,IAAKC,EAAe,GACpB,IAAKA,EAAe,GACpB,IAAKA,EAAe,GACpB,IAAKA,EAAe,GACpB,IAAKA,EAAe,GACpB,IAAKA,EAAe,GACpB,IAAKA,EAAe,GACpB,IAAKA,EAAe,GACpB,IAAKA,EAAe,GACpB,IAAKA,EAAe,GACRA,EAAe,QAMvC,IAAImB,EAAQ,IAAI7B,IAAS8B,MAAM,CAC3BC,OAAQ,CAAC,GAAI,GACbC,aAAa,EACbC,cAAc,IAGlBpB,EAAIW,GAAG,aAAc,UAAU,SAACU,GAE5BrB,EAAIsB,YAAYnB,MAAMoB,OAAS,UAGXF,EAAEG,SAAS,GAAGC,SAASC,YAAYC,QAAvD,IAiBUC,EAAMP,EAAEG,SAAS,GAAGK,WAAWC,IAC/BC,EAAUV,EAAEG,SAAS,GAAGK,WAAWE,QACnCC,EAAWX,EAAEG,SAAS,GAAGK,WAAWG,SACpCC,EAASZ,EAAEG,SAAS,GAAGK,WAAW,gBAExClC,EAAS,CACL,IAAOiC,EACP,QAAWG,EACX,SAAYC,EACZ,OAAUC,OAMtBjC,EAAIW,GAAG,aAAc,UAAU,WAC3BX,EAAIsB,YAAYnB,MAAMoB,OAAS,GAC/BP,EAAMkB,iBAIhB,IAEF,IA2BMC,EAAwB,CAC1BC,aAAc,MACdC,QAAS,eACTC,OAAQ,OACRC,YAAa,MACbC,MAAO,QAWLC,GANgB/C,EAAMgD,MAAQhD,EAAMgD,KACjBhD,EAAMiD,SAAWjD,EAAMiD,QAEpBjD,EAAMkD,OAASlD,EAAMkD,MAI7C,gCACI,sCAAalD,EAAMkC,KAAOlC,EAAMkC,IADpC,IACyC,uBACrC,0CAAiBlC,EAAMqC,SAAWrC,EAAMqC,QAF5C,IAEqD,uBACjD,2CAAkBrC,EAAMsC,UAAYtC,EAAMsC,SAH9C,IAGwD,uBACpD,iDAAwBtC,EAAMuC,QAAUvC,EAAMuC,WAItD,OACI,8BACI,sBAAKY,IAAKtD,EAAcY,MAAO,CAAEqC,MAAO,QAASF,OAAQ,SAAzD,UACI,sBAAKQ,GAAG,eAAeC,MAAM,SAAS5C,MAvD7B,CACjB6C,gBAAiB,OACjBZ,aAAc,MACda,OAAQ,OACRC,UAAW,+BACXC,KAAM,2DACNC,QAAS,OACTC,SAAU,WACVC,MAAO,OACPC,OAAQ,GA8CA,UACI,oBAAIpD,MAjCI,CACpBqD,OAAQ,YAgCI,SAA6B5D,IAC5B6D,OAAOC,QAAQ5D,GAAiBE,KAAI,SAAC2D,EAAMC,GAAP,OACjC,gCAAK,sBAAMzD,MAAK,2BAAMgC,GAAN,IAA6Ba,gBAAiBnD,EAAe+D,OAAiB9D,EAAgB8D,YAGtH,qBAAKd,GAAG,eAAeC,MAAM,SAAS5C,MAlDxB,CACtB6C,gBAAiB,OACjBZ,aAAc,MACda,OAAQ,OACRC,UAAW,+BACXC,KAAM,2DACNC,QAAS,OACTC,SAAU,WACVQ,KAAM,OACNN,OAAQ,GAyCA,SAC2Dd,U,OCxP5DqB,EAhBF,WAEX,MAAsCrE,mBAAS,OAA/C,mBAAOsE,EAAP,UAOA,OACE,mCACE,cAAC,EAAD,CAAKA,YAAaA,OAOLC,IAAOC,IAAV,+DCrBD,SAAS3E,IAEpB,OACI,qD,kDCDa4E,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACXC,MAAM,EACNC,UAAW,GAEb,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBANL,E,qDASnB,WACIC,OAAOC,iBAAiB,SAAUC,KAAKJ,gB,kCAG3C,WACIE,OAAOG,oBAAoB,SAAUD,KAAKJ,gB,0BAG9C,WAC0BI,KAAKP,MAAnBE,UACRK,KAAKE,SAAS,CACZP,UAAWQ,SAASC,KAAKC,wBAAwBC,IACjDZ,KAAMS,SAASC,KAAKC,wBAAwBC,KAAO,Q,oBAiBzD,WACI,MAAyBN,KAAKR,MAA9B,EAAQe,MAAR,EAAeC,MASf,OACI,eAACC,EAAD,WACA,cAACC,EAAD,CAAiBC,UAAWX,KAAKP,MAAMC,KAAO,SAAW,SAAzD,SACE,qBAAKkB,KAAK,IAAID,UAAWX,KAAKP,MAAMC,KAAO,aAAe,aAAcmB,IAAI,iBAK9E,cAACC,EAAD,CAAcH,UAAWX,KAAKP,MAAMC,KAAO,SAAW,SAAtD,SACE,qBAAKkB,KAAK,IAAID,UAAWX,KAAKP,MAAMC,KAAO,aAAe,aAAcmB,IAAI,wB,GA1DtDE,IAAMC,WAqElCF,EAAezB,IAAOC,IAAV,meAyBZoB,EAAkBrB,IAAOC,IAAV,kjBAgCfmB,EAAapB,IAAOC,IAAV,ijCC1HZ2B,EAAW,CACf,CAAElD,KAAM,OAAQmD,GAAI,MAEhBX,EAAQ,CAAExC,KAAM,WAAYmD,GAAI,QAiBvBC,MAff,WACE,OACE,eAAC,IAAMC,SAAP,WACE,cAAC,EAAD,CAAQb,MAAOA,EAAOC,MAAOS,IAE7B,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,KAAK,6BAA6BC,OAAK,EAACC,UAAWpC,IAC1D,cAAC,IAAD,CAAOoC,UAAWC,aCTbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjC,SAASkC,eAAe,SAM1BZ,M","file":"static/js/main.c326d232.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport * as LLIDPlaces from \"../assets/llid_timeline.json\";\nimport * as BBLPlaces from \"../assets/bbl_timeline.json\";\nimport mapboxgl from \"mapbox-gl\"\nimport '../assets/App.css';\n\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN\n\nexport const Map = () => {\n\n    const mapContainer = useRef()\n    const [hover, setHover] = useState({})\n    const map_focus_list = ['Duration', 'NAICS', 'Vacancy', 'Turnover']\n    const map_focus = map_focus_list[2]\n\n    const map_focus_dict = {\n        \"0\" : '#00ff00',\n        \"1\" : '#30ff00',\n        \"2\" : '#60ff00',\n        \"3\" : '#90ff00',\n        \"4\" : '#c0ff00',\n        \"5\" : '#ffff00',\n        \"6\" : '#ffc000',\n        \"7\" : '#ff9000',\n        \"8\" : '#ff6000',\n        \"9\" : '#ff3000',\n        \"10\" : '#ff0000'\n    }\n\n    const naics_string_dict = {\n        \"0\" : 'Raw Goods Producers',\n        \"1\" : 'Raw Goods Processors',\n        \"2\" : 'Materials Manufacturers',\n        \"3\" : 'Equipment/Vehicle Manufacturers',\n        \"4\" : 'Goods Wholesalers; Groceries',\n        \"5\" : 'Goods Retailers',\n        \"6\" : 'Transportation',\n        \"7\" : 'Business-oriented Services',\n        \"8\" : 'Personal Services',\n        \"9\" : 'Govt. and Civil Society',\n    }\n    \n    const duration_string_dict = {\n        \"0\" : '0-1',\n        \"1\" : '1-2',\n        \"2\" : '2-3',\n        \"3\" : '3-4',\n        \"4\" : '4-5',\n        \"5\" : '5-6',\n        \"6\" : '6-7',\n        \"7\" : '7-8',\n        \"8\" : '8-9',\n        \"9\" : '9-10',\n        \"10\" : '10+'\n    }\n\n    const turnover_string_dict = {\n        \"0\" : '<(.8)',\n        \"1\" : '(.8)-(.6)',\n        \"2\" : '(.6)-(.4)',\n        \"3\" : '(.4)-(.2)',\n        \"4\" : '(.2)-0',\n        \"5\" : '0-.2',\n        \"6\" : '.2-.4',\n        \"7\" : '.4-.6',\n        \"8\" : '.6-.8',\n        \"9\" : '>.8',\n    }\n\n    const vacancy_string_dict = {\n        \"0\" : '0-.1',\n        \"1\" : '.1-.2',\n        \"2\" : '.2-.3',\n        \"3\" : '.3-.4',\n        \"4\" : '.4-.5',\n        \"5\" : '.5-.6',\n        \"6\" : '.6-.7',\n        \"7\" : '.7-.8',\n        \"8\" : '.8-.9',\n        \"9\" : '.9-1',\n    }\n\n    const popup_style = {\n        maxWidth: \"400px\",\n        font: \"12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif\"\n    }\n\n    var map_string_dict = {}\n\n    if (map_focus == \"NAICS\"){\n        map_string_dict = naics_string_dict\n    } else if (map_focus == \"Duration\"){\n        map_string_dict = duration_string_dict\n    } else if (map_focus == \"Vacancy\"){\n        map_string_dict = vacancy_string_dict\n    } else if (map_focus == \"Turnover\"){\n        map_string_dict = turnover_string_dict\n    }\n\n    useEffect(() => {\n        const map = new mapboxgl.Map({\n            container: mapContainer.current,\n            style: 'mapbox://styles/mapbox/light-v10',\n            zoom: 10.5,\n            center: [-73.962141,40.72796]\n        });\n\n        \n        var place_data = {}\n        if (map_focus == \"NAICS\" || map_focus == \"Duration\"){\n            place_data = LLIDPlaces;\n        } else {\n            place_data = BBLPlaces;\n        }\n        console.log(place_data.default)\n        map.on('load', () => {\n\n            map.addSource('places', {\n                type: 'geojson',\n                data: place_data.default\n            });\n\n            map.addLayer({\n                'id': 'places',\n                'type': 'circle',\n                'source': 'places',\n                // 'source-layer': 'sf2010',\n                'paint': {\n                    // Make circles larger as the user zooms from z12 to z22.\n                    'circle-radius': {\n                        'base': 1.75,\n                        'stops': [\n                            [12, 2],\n                            [22, 50]\n                        ]\n                    },\n                    // Color circles by ethnicity, using a `match` expression.\n                    'circle-color': [\n                        'match',\n                        ['get', map_focus],\n                        \"0\", map_focus_dict['0'],\n                        \"1\", map_focus_dict['1'],\n                        \"2\", map_focus_dict['2'],\n                        \"3\", map_focus_dict['3'],\n                        \"4\", map_focus_dict['4'],\n                        \"5\", map_focus_dict['5'],\n                        \"6\", map_focus_dict['6'],\n                        \"7\", map_focus_dict['7'],\n                        \"8\", map_focus_dict['8'],\n                        \"9\", map_focus_dict['9'],\n                        /* other */ map_focus_dict['10']\n                    ]\n                }\n            });\n\n            // Create a popup, but don't add it to the map yet.\n            var popup = new mapboxgl.Popup({\n                offset: [0, -7],\n                closeButton: false,\n                closeOnClick: false\n            });\n                \n            map.on('mouseenter', 'places', (e) => {\n                // Change the cursor style as a UI indicator.\n                map.getCanvas().style.cursor = 'pointer';\n                \n                // Copy coordinates array.\n                const coordinates = e.features[0].geometry.coordinates.slice();\n\n                if (map_focus == \"NAICS\" || map_focus == \"Duration\"){\n                    const name = e.features[0].properties.Name;\n                    const address = e.features[0].properties.Address;\n                    const industry = e.features[0].properties[\"NAICS Title\"];\n                    const start = e.features[0].properties[\"Start Date\"];\n                    const end = e.features[0].properties[\"End Date\"];\n\n                    setHover({\n                        \"name\": name,\n                        \"address\": address,\n                        \"industry\": industry,\n                        \"start\": start,\n                        \"end\": end,\n                    })\n                } else {\n                    const bbl = e.features[0].properties.BBL;\n                    const vacancy = e.features[0].properties.vacancy;\n                    const turnover = e.features[0].properties.turnover;\n                    const maxbus = e.features[0].properties[\"Max Business\"];\n\n                    setHover({\n                        \"bbl\": bbl,\n                        \"vacancy\": vacancy,\n                        \"turnover\": turnover,\n                        \"maxbus\": maxbus\n                    })\n                }\n                \n            });\n                \n            map.on('mouseleave', 'places', () => {\n                map.getCanvas().style.cursor = '';\n                popup.remove();\n            });\n        });\n            \n    },[])\n\n    const legend_style = {\n        backgroundColor: '#fff',\n        borderRadius: '3px',\n        bottom: '30px',\n        boxShadow: '0 1px 2px rgba(0, 0, 0, 0.1)',\n        font: \"12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif\",\n        padding: \"10px\",\n        position: \"absolute\",\n        right: \"10px\",\n        zIndex: 1\n    }\n    const legend_style_left = {\n        backgroundColor: '#fff',\n        borderRadius: '3px',\n        bottom: '30px',\n        boxShadow: '0 1px 2px rgba(0, 0, 0, 0.1)',\n        font: \"12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif\",\n        padding: \"10px\",\n        position: \"absolute\",\n        left: \"10px\",\n        zIndex: 1\n    }\n\n    const legend_h4_style = {\n        margin: \"0 0 10px\"\n    }\n\n    const legend_div_span_style = {\n        borderRadius: \"50%\",\n        display: \"inline-block\",\n        height: \"10px\",\n        marginRight: \"5px\",\n        width: \"10px\"\n    }\n\n    const llid_htm = (\n        <div>\n            <b>NAME: </b>{hover.name && hover.name} <br/>\n            <b>ADDRESS: </b>{hover.address && hover.address}  <br/>\n            {/* <b>INDUSTRY: </b>{hover.industry && hover.industry} <br/> */}\n            <b>START DATE: </b>{hover.start && hover.start}\n        </div>\n    )\n    const bbl_htm = (\n        <div>\n            <b>BBL: </b>{hover.bbl && hover.bbl} <br/>\n            <b>VACANCY: </b>{hover.vacancy && hover.vacancy} <br/>\n            <b>TURNOVER: </b>{hover.turnover && hover.turnover} <br/>\n            <b>MAX BUSINESS #: </b>{hover.maxbus && hover.maxbus}\n        </div>\n    )\n\n    return (\n        <div> \n            <div ref={mapContainer} style={{ width: \"100vw\", height: \"100vh\" }}>\n                <div id=\"state-legend\" class=\"legend\" style={legend_style}>\n                    <h4 style={legend_h4_style}>{map_focus}</h4>\n                    {Object.entries(map_string_dict).map((item, index) => \n                        <div><span style={{...legend_div_span_style, backgroundColor: map_focus_dict[index]}}></span>{map_string_dict[index]}</div>\n                    )}\n                </div>\n                <div id=\"state-legend\" class=\"legend\" style={legend_style_left}>\n                    {(map_focus == \"Vacancy\" || map_focus == \"Turnover\") ? bbl_htm : llid_htm}\n                </div>\n            </div>\n        </div>\n    )\n\n}","import React from 'react';\nimport {Map} from '../components/Map.js';\nimport {useState,useEffect} from 'react'; \nimport styled, { css } from 'styled-components';\n\nconst Home = () => {\n\n  const [zipLocation, setZipLocation] = useState(10025)\n\n  const PushMap = (zipcode) => {\n    console.log(zipcode)\n    setZipLocation(zipcode);\n  }\n\n  return (\n    <>\n      <Map zipLocation={zipLocation}/>\n    </>\n  );\n}\n\nexport default Home;\n\nconst StyledText = styled.div`\n  background:black;\n  z-index:2;\n`;","import React, { useState, useEffect } from \"react\";  \n\nexport default function Map() {\n\n    return (\n        <div>uh oh, youre lost!</div>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\";\n\nexport default class Navbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          show: true,\n          scrollPos: 0\n        };\n        this.handleScroll = this.handleScroll.bind(this);\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.handleScroll);\n    }\n      \n    componentWillUnmount() {\n        window.removeEventListener(\"scroll\", this.handleScroll);\n    }\n\n    handleScroll() {\n        const { scrollPos } = this.state;\n        this.setState({\n          scrollPos: document.body.getBoundingClientRect().top,\n          show: document.body.getBoundingClientRect().top > -100\n        });\n      }\n      \n    static propTypes = {\n        brand: PropTypes.shape({\n          name: PropTypes.string.isRequired,\n          to: PropTypes.string.isRequired\n        }),\n        links: PropTypes.arrayOf(\n          PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            to: PropTypes.string.isRequired\n          })\n        )\n      };\n  \n    render() {\n        const { brand, links } = this.props;\n      \n        const NavLinks = () =>\n          links.map((link, index) => (\n            <a key={index} href={link.to}>\n              {link.name}\n            </a>\n        ));\n      \n        return (\n            <Transition>\n            <StyledNavbarTop className={this.state.show ? \"botbar\" : \"topbar\"}>\n              <img href=\"/\" className={this.state.show ? \"botbarlogo\" : \"topbarlogo\"} alt=\"React Logo\" />\n              {/* <nav>\n                <NavLinks />\n              </nav> */}\n            </StyledNavbarTop>\n            <StyledNavbar className={this.state.show ? \"topbar\" : \"botbar\"}>\n              <img href=\"/\" className={this.state.show ? \"topbarlogo\" : \"botbarlogo\"} alt=\"React Logo\" />\n\n              {/* <nav>\n                <NavLinks />\n              </nav> */}\n            </StyledNavbar>\n            </Transition>\n        );\n    }\n  }\n\n  const StyledNavbar = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  margin: 0 auto;\n  height: 5rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: bolder;\n  background: white;\n  z-index: 1000;\n  a {\n    margin-right: 3rem;\n    font-weight: normal;\n  }\n  .brand {\n    font-style: italic;\n    margin-left: 3rem;\n    font-weight: bold;\n    color: white;\n    font-size: 1.25rem;\n  }`;\n  const StyledNavbarTop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  margin: 0 auto;\n  height: 5rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: bolder;\n  background: linear-gradient(\n    to bottom,\n    rgba(0, 0, 0, 0.5),\n    rgba(0, 0, 0, 0)\n  );\n  z-index: 1000;\n  a {\n    margin-right: 3rem;\n    font-weight: normal;\n  }\n  .brand {\n    font-style: italic;\n    margin-left: 3rem;\n    font-weight: bold;\n    color: white;\n    font-size: 1.25rem;\n  }`;\n\n\n\n  const Transition = styled.div`\n  .topbar {\n    -webkit-transition: opacity .15s ease-in-out;\n    -moz-transition: opacity .15s ease-in-out;\n    -ms-transition: opacity .15s ease-in-out;\n    -o-transition: opacity .15s ease-in-out;\n     opacity: 0;\n  }\n  .botbar {\n    -webkit-transition: opacity .15s ease-in-out;\n    -moz-transition: opacity .15s ease-in-out;\n    -ms-transition: opacity .15s ease-in-out;\n    -o-transition: opacity .15s ease-in-out;\n     opacity: 1;\n  }\n  .topbarlogo {\n    -webkit-transition: opacity .15s ease-in-out;\n    -moz-transition: opacity .15s ease-in-out;\n    -ms-transition: opacity .15s ease-in-out;\n    -o-transition: opacity .15s ease-in-out;\n     opacity: 0;\n     height: 50%;\n     width: auto;\n     padding-left: 30px;\n  }\n  .botbarlogo {\n    -webkit-transition: opacity .15s ease-in-out;\n    -moz-transition: opacity .15s ease-in-out;\n    -ms-transition: opacity .15s ease-in-out;\n    -o-transition: opacity .15s ease-in-out;\n     opacity: 1;\n    height: 50%;\n    width: auto;\n    padding-left: 30px;\n  }\n`;","import './App.css';\nimport { BrowserRouter as Router , Switch , Route } from \"react-router-dom\";\nimport React from \"react\";\n\nimport Home from './views/Home';\nimport NoMatch from './views/NoMatch';\n\nimport Navbar from './components/Navbar';\nconst navlinks = [\n  { name: \"Home\", to: \"/\" }\n];\nconst brand = { name: \"peekaboo\", to: \"home\" };\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Navbar brand={brand} links={navlinks} />\n      \n      <Router>\n        <Switch>\n          <Route path=\"/open-storefront-directory\" exact component={Home}/>\n          <Route component={NoMatch}/>\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}