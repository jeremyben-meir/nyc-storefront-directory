{"version":3,"sources":["components/Map.js","views/Home.js","views/About.js","views/Methods.js","views/NoMatch.js","assets/NavbarStyles.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["mapboxgl","workerClass","require","default","accessToken","process","Map","mapContainer","useRef","useState","hover","setHover","map_focus","map_focus_dict","map_string_dict","useEffect","map","container","current","style","zoom","center","place_data","BBLPlaces","console","log","on","addSource","type","data","addLayer","popup","Popup","offset","closeButton","closeOnClick","e","getCanvas","cursor","features","geometry","coordinates","slice","bbl","properties","BBL","vacancy","turnover","maxbus","remove","legend_div_span_style","borderRadius","display","height","marginRight","width","bbl_htm","name","address","start","ref","id","className","backgroundColor","bottom","boxShadow","font","padding","position","right","zIndex","margin","Object","entries","item","index","left","Home","StyledNavbarTop","styled","div","Transition","A","a","Navbar","props","state","show","scrollPos","handleScroll","bind","window","addEventListener","this","removeEventListener","setState","document","body","getBoundingClientRect","top","links","brand","NavLinks","link","to","React","Component","navlinks","App","Fragment","path","exact","component","About","Methods","NoMatch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dd2263f0.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport * as LLIDPlaces from \"../assets/llid_timeline.json\";\nimport * as BBLPlaces from \"../assets/bbl_timeline.json\";\nimport mapboxgl from \"mapbox-gl\"\nimport '../assets/App.css';\n\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN\n\nexport const Map = () => {\n\n    const mapContainer = useRef()\n    const [hover, setHover] = useState({})\n    const map_focus_list = ['Duration', 'NAICS', 'Vacancy', 'Turnover']\n    const map_focus = map_focus_list[2]\n\n    const map_focus_dict = {\n        \"0\" : '#00ff00',\n        \"1\" : '#30ff00',\n        \"2\" : '#60ff00',\n        \"3\" : '#90ff00',\n        \"4\" : '#c0ff00',\n        \"5\" : '#ffff00',\n        \"6\" : '#ffc000',\n        \"7\" : '#ff9000',\n        \"8\" : '#ff6000',\n        \"9\" : '#ff3000',\n        \"10\" : '#ff0000'\n    }\n\n    const naics_string_dict = {\n        \"0\" : 'Raw Goods Producers',\n        \"1\" : 'Raw Goods Processors',\n        \"2\" : 'Materials Manufacturers',\n        \"3\" : 'Equipment/Vehicle Manufacturers',\n        \"4\" : 'Goods Wholesalers; Groceries',\n        \"5\" : 'Goods Retailers',\n        \"6\" : 'Transportation',\n        \"7\" : 'Business-oriented Services',\n        \"8\" : 'Personal Services',\n        \"9\" : 'Govt. and Civil Society',\n    }\n    \n    const duration_string_dict = {\n        \"0\" : '0-1',\n        \"1\" : '1-2',\n        \"2\" : '2-3',\n        \"3\" : '3-4',\n        \"4\" : '4-5',\n        \"5\" : '5-6',\n        \"6\" : '6-7',\n        \"7\" : '7-8',\n        \"8\" : '8-9',\n        \"9\" : '9-10',\n        \"10\" : '10+'\n    }\n\n    const turnover_string_dict = {\n        \"0\" : '<(.8)',\n        \"1\" : '(.8)-(.6)',\n        \"2\" : '(.6)-(.4)',\n        \"3\" : '(.4)-(.2)',\n        \"4\" : '(.2)-0',\n        \"5\" : '0-.2',\n        \"6\" : '.2-.4',\n        \"7\" : '.4-.6',\n        \"8\" : '.6-.8',\n        \"9\" : '>.8',\n    }\n\n    const vacancy_string_dict = {\n        \"0\" : '0-.1',\n        \"1\" : '.1-.2',\n        \"2\" : '.2-.3',\n        \"3\" : '.3-.4',\n        \"4\" : '.4-.5',\n        \"5\" : '.5-.6',\n        \"6\" : '.6-.7',\n        \"7\" : '.7-.8',\n        \"8\" : '.8-.9',\n        \"9\" : '.9-1',\n    }\n\n    const popup_style = {\n        maxWidth: \"400px\",\n        font: \"12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif\"\n    }\n\n    var map_string_dict = {}\n\n    if (map_focus == \"NAICS\"){\n        map_string_dict = naics_string_dict\n    } else if (map_focus == \"Duration\"){\n        map_string_dict = duration_string_dict\n    } else if (map_focus == \"Vacancy\"){\n        map_string_dict = vacancy_string_dict\n    } else if (map_focus == \"Turnover\"){\n        map_string_dict = turnover_string_dict\n    }\n\n    useEffect(() => {\n        const map = new mapboxgl.Map({\n            container: mapContainer.current,\n            style: 'mapbox://styles/mapbox/light-v10',\n            zoom: 10.5,\n            center: [-73.962141,40.72796]\n        });\n\n        \n        var place_data = {}\n        if (map_focus == \"NAICS\" || map_focus == \"Duration\"){\n            place_data = LLIDPlaces;\n        } else {\n            place_data = BBLPlaces;\n        }\n        console.log(place_data.default)\n        map.on('load', () => {\n\n            map.addSource('places', {\n                type: 'geojson',\n                data: place_data.default\n            });\n\n            map.addLayer({\n                'id': 'places',\n                'type': 'circle',\n                'source': 'places',\n                // 'source-layer': 'sf2010',\n                'paint': {\n                    // Make circles larger as the user zooms from z12 to z22.\n                    'circle-radius': {\n                        'base': 1.75,\n                        'stops': [\n                            [12, 2],\n                            [22, 50]\n                        ]\n                    },\n                    // Color circles by ethnicity, using a `match` expression.\n                    'circle-color': [\n                        'match',\n                        ['get', map_focus],\n                        \"0\", map_focus_dict['0'],\n                        \"1\", map_focus_dict['1'],\n                        \"2\", map_focus_dict['2'],\n                        \"3\", map_focus_dict['3'],\n                        \"4\", map_focus_dict['4'],\n                        \"5\", map_focus_dict['5'],\n                        \"6\", map_focus_dict['6'],\n                        \"7\", map_focus_dict['7'],\n                        \"8\", map_focus_dict['8'],\n                        \"9\", map_focus_dict['9'],\n                        /* other */ map_focus_dict['10']\n                    ]\n                }\n            });\n\n            // Create a popup, but don't add it to the map yet.\n            var popup = new mapboxgl.Popup({\n                offset: [0, -7],\n                closeButton: false,\n                closeOnClick: false\n            });\n                \n            map.on('mouseenter', 'places', (e) => {\n                // Change the cursor style as a UI indicator.\n                map.getCanvas().style.cursor = 'pointer';\n                \n                // Copy coordinates array.\n                const coordinates = e.features[0].geometry.coordinates.slice();\n\n                if (map_focus == \"NAICS\" || map_focus == \"Duration\"){\n                    const name = e.features[0].properties.Name;\n                    const address = e.features[0].properties.Address;\n                    const industry = e.features[0].properties[\"NAICS Title\"];\n                    const start = e.features[0].properties[\"Start Date\"];\n                    const end = e.features[0].properties[\"End Date\"];\n\n                    setHover({\n                        \"name\": name,\n                        \"address\": address,\n                        \"industry\": industry,\n                        \"start\": start,\n                        \"end\": end,\n                    })\n                } else {\n                    const bbl = e.features[0].properties.BBL;\n                    const vacancy = e.features[0].properties.vacancy;\n                    const turnover = e.features[0].properties.turnover;\n                    const maxbus = e.features[0].properties[\"Max Business\"];\n\n                    setHover({\n                        \"bbl\": bbl,\n                        \"vacancy\": vacancy,\n                        \"turnover\": turnover,\n                        \"maxbus\": maxbus\n                    })\n                }\n                \n            });\n                \n            map.on('mouseleave', 'places', () => {\n                map.getCanvas().style.cursor = '';\n                popup.remove();\n            });\n        });\n            \n    },[])\n\n    const legend_style = {\n        backgroundColor: '#fff',\n        borderRadius: '3px',\n        bottom: '30px',\n        boxShadow: '0 1px 2px rgba(0, 0, 0, 0.1)',\n        font: \"12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif\",\n        padding: \"10px\",\n        position: \"absolute\",\n        right: \"10px\",\n        zIndex: 1\n    }\n    const legend_style_left = {\n        backgroundColor: '#fff',\n        borderRadius: '3px',\n        bottom: '30px',\n        boxShadow: '0 1px 2px rgba(0, 0, 0, 0.1)',\n        font: \"12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif\",\n        padding: \"10px\",\n        position: \"absolute\",\n        left: \"10px\",\n        zIndex: 1\n    }\n\n    const legend_h4_style = {\n        margin: \"0 0 10px\"\n    }\n\n    const legend_div_span_style = {\n        borderRadius: \"50%\",\n        display: \"inline-block\",\n        height: \"10px\",\n        marginRight: \"5px\",\n        width: \"10px\"\n    }\n\n    const llid_htm = (\n        <div>\n            <b>NAME: </b>{hover.name && hover.name} <br/>\n            <b>ADDRESS: </b>{hover.address && hover.address}  <br/>\n            {/* <b>INDUSTRY: </b>{hover.industry && hover.industry} <br/> */}\n            <b>START DATE: </b>{hover.start && hover.start}\n        </div>\n    )\n    const bbl_htm = (\n        <div>\n            <b>BBL: </b>{hover.bbl && hover.bbl} <br/>\n            <b>VACANCY: </b>{hover.vacancy && hover.vacancy} <br/>\n            <b>TURNOVER: </b>{hover.turnover && hover.turnover} <br/>\n            <b>MAX BUSINESS #: </b>{hover.maxbus && hover.maxbus}\n        </div>\n    )\n\n    return (\n        <div> \n            <div ref={mapContainer} style={{ width: \"100vw\", height: \"100vh\" }}>\n                <div id=\"state-legend\" className=\"legend\" style={legend_style}>\n                    <h4 style={legend_h4_style}>{map_focus}</h4>\n                    {Object.entries(map_string_dict).map((item, index) => \n                        <div><span style={{...legend_div_span_style, backgroundColor: map_focus_dict[index]}}></span>{map_string_dict[index]}</div>\n                    )}\n                </div>\n                <div id=\"state-legend\" className=\"legend\" style={legend_style_left}>\n                    {(map_focus == \"Vacancy\" || map_focus == \"Turnover\") ? bbl_htm : llid_htm}\n                </div>\n            </div>\n        </div>\n    )\n\n}","import React from 'react';\nimport {Map} from '../components/Map.js';\n\nconst Home = () => {\n\n  return (\n    <Map/>\n  );\n}\n\nexport default Home;","import React, { useState, useEffect } from \"react\";  \n\nexport default function Map() {\n\n    return (\n        <div>about</div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";  \n\nexport default function Map() {\n\n    return (\n        <div>Methods</div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";  \n\nexport default function Map() {\n\n    return (\n        <div>uh oh, youre lost!</div>\n    );\n}\n","import styled from \"styled-components\";\n\nexport const StyledNavbarTop = styled.div`\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100%;\nmargin: 0 auto;\nheight: 5rem;\ndisplay: flex;\nflex-direction: row;\njustify-content: space-between;\nalign-items: center;\nfont-weight: bolder;\nbackground: linear-gradient(\n  to bottom,\n  rgba(0, 0, 0, 0.5),\n  rgba(0, 0, 0, 0)\n);\nz-index: 1000;\na {\n  margin-right: 3rem;\n  font-weight: normal;\n}\n.brand {\n  font-style: italic;\n  margin-left: 3rem;\n  font-weight: bold;\n  color: white;\n  font-size: 1.25rem;\n}`;\n\nexport const Transition = styled.div`\n.topbar {\n  -webkit-transition: opacity .15s ease-in-out;\n  -moz-transition: opacity .15s ease-in-out;\n  -ms-transition: opacity .15s ease-in-out;\n  -o-transition: opacity .15s ease-in-out;\n   opacity: 0;\n}\n.botbar {\n  -webkit-transition: opacity .15s ease-in-out;\n  -moz-transition: opacity .15s ease-in-out;\n  -ms-transition: opacity .15s ease-in-out;\n  -o-transition: opacity .15s ease-in-out;\n   opacity: 1;\n}\n.topbarlogo {\n  -webkit-transition: opacity .15s ease-in-out;\n  -moz-transition: opacity .15s ease-in-out;\n  -ms-transition: opacity .15s ease-in-out;\n  -o-transition: opacity .15s ease-in-out;\n   opacity: 0;\n   height: 50%;\n   width: auto;\n   padding-left: 30px;\n}\n.botbarlogo {\n  -webkit-transition: opacity .15s ease-in-out;\n  -moz-transition: opacity .15s ease-in-out;\n  -ms-transition: opacity .15s ease-in-out;\n  -o-transition: opacity .15s ease-in-out;\n   opacity: 1;\n  height: 50%;\n  width: auto;\n  padding-left: 30px;\n}\n`;\n\nexport const A = styled.a`\ncolor: #000000;\ntext-decoration: none;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport {StyledNavbarTop, Transition, A} from '../assets/NavbarStyles.js';\n\nexport default class Navbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          show: true,\n          scrollPos: 0\n        };\n        this.handleScroll = this.handleScroll.bind(this);\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.handleScroll);\n    }\n      \n    componentWillUnmount() {\n        window.removeEventListener(\"scroll\", this.handleScroll);\n    }\n\n    handleScroll() {\n        const { scrollPos } = this.state;\n        this.setState({\n          scrollPos: document.body.getBoundingClientRect().top,\n          show: document.body.getBoundingClientRect().top > -100\n        });\n      }\n      \n    static propTypes = {\n        brand: PropTypes.shape({\n          name: PropTypes.string.isRequired,\n          to: PropTypes.string.isRequired\n        }),\n        links: PropTypes.arrayOf(\n          PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            to: PropTypes.string.isRequired\n          })\n        )\n      };\n  \n    render() {\n        const { brand, links } = this.props;\n      \n        const NavLinks = () =>\n          links.map((link, index) => (\n            <Link to={link.to}>\n              <A key={index}>{link.name}</A>\n            </Link>\n        ));\n      \n        return (\n            <Transition>\n            <StyledNavbarTop className={this.state.show ? \"botbar\" : \"topbar\"}>\n              <a> Open Storefront Data </a>\n              <nav>\n                <NavLinks />\n              </nav>\n            </StyledNavbarTop>\n            </Transition>\n        );\n    }\n  }","import './App.css';\nimport { BrowserRouter as Router , Switch , Route } from \"react-router-dom\";\nimport React from \"react\";\n\nimport Home from './views/Home';\nimport About from './views/About';\nimport Methods from './views/Methods';\nimport NoMatch from './views/NoMatch';\n\nimport Navbar from './components/Navbar';\n\nconst navlinks = [\n  { name: \"Map\", to: \"/open-storefront-directory\" },\n  { name: \"Methods\", to: \"/open-storefront-directory/methods\" },\n  { name: \"About\", to: \"/open-storefront-directory/about\" }\n];\nconst brand = { name: \"open-storefront-directory\", to: \"home\" };\n\nfunction App() {\n  return (\n      <Router>\n      <React.Fragment>\n      <Navbar brand={brand} links={navlinks} />\n      \n        <Switch>\n          <Route path=\"/open-storefront-directory\" exact component={Home}/>\n          <Route path=\"/open-storefront-directory/about\" exact component={About}/>\n          <Route path=\"/open-storefront-directory/methods\" exact component={Methods}/>\n          <Route path=\"/open-storefront-directory/\" component={NoMatch}/>\n        </Switch>\n    </React.Fragment>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}